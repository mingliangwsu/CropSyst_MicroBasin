#include <corn/format/HTML/form_IO/HTML_form_request.h>
#include <corn/format/HTML/form_IO/content.h>
#include <corn/format/datarec.h>

namespace HTML
{
/*________*/ HTML_form_request::HTML_form_request(/*const char *i_content*/)
/*________*/ : Data_source()
///*________*/ , request_method(i_request_method)
/*________*/ , content(/*i_content*/)
/*________*/ {
/*________*/ };

#ifndef local_debug

/*_______*/ bool HTML_form_request::get(Data_record &data_rec)
/*______*/ {
/*______*/     bool got = Data_source::get(data_rec);

/*______*/     {
///*______*/     int remaining_length = instream_length;
/*______*/     char key[100];    int key_i = 0;
/*______*/     char value[100];  int value_i = 0;
///*______*/     bool at_end = false;
//             Currently HTML forms don't have sections, but VV_File is setup that way.
//             The default current section is []
//010305__*/     VV_section *current_section = (VV_section *)sections.current();
/*______*/     VV_section *
/*010308*/     current_section = (VV_section *)data_rec.get_current_section();

/*______*/     bool scanning_key = true;
/*______*/     for (int i = 0; i <= content.length(); i++)
/*______*/     {
/*______*/        char curr_char = content.c_str()[i];
///*______*/        CORN_string curr_char_str(curr_char,1);
/*______*/        if (scanning_key)
/*______*/        {
/*______*/           if (curr_char == '=')
/*______*/           {   scanning_key = false; key_i = 0; }
/*______*/           else
/*______*/           {  key[key_i++] = curr_char; key[key_i] = 0;
//obs/*______*/              key.append(curr_char_str);
/*______*/           };
/*______*/        }
/*______*/        else
/*______*/        {
/*______*/           if ((curr_char == '&') || (curr_char == 0))
/*______*/           {  // End of variable=value
/*______*/              CORN_string clean_value(value);
/*______*/              unescape_url(clean_value);
/*030415*/              current_section->add_entry(key/*.c_str()*/,clean_value.c_str(),false/*,unexpected_only*/);  // I think unexpected_only false
/*______*/              scanning_key = true;
/*______*/              key[0] = 0; key_i = 0;     // key.assign("");
/*______*/              value[0] = 0; value_i = 0; // value.assign("");
/*______*/           }
/*______*/           else
/*______*/           {  value[value_i++] = curr_char; value[value_i] = 0;
///*______*/              value.append(curr_char_str);
/*______*/           };
/*______*/        };
/*______*/     };
/*______*/     };
/*______*/     return true;
/*______*/ };
#endif

/*010308*/  bool HTML_form_request::set(Data_record &data_rec)
/*______*/  {
/*______*/     // NYI currently we only just read forms from the CGI
               return true;
/*______*/  };

/*_______*/ const char *HTML_form_request::label_cstr(char *buffer) const
/*______*/  {   return buffer; // Currently not needed
/*______*/  };

};

