#ifndef CS_OBSERVATIONH
#define CS_OBSERVATIONH

#include "corn/math/statistical/statistics_types.hpp"
#include "CS_suite/observation/CS_emanator.h"

namespace CS
{
//______________________________________________________________________________
class Emanator;
//class Inspectors;
//______________________________________________________________________________
} // namespace CS
#define CS_EPHEMERAL true
#define CS_NOT_EPHEMERAL false
#define CS_ONTOLOGY_ROOT true
#define CS_NOT_ONTOLOGY_ROOT false

//______________________________________________________________________________
#define RENDER_INSPECTORS_DECLARATION           \
virtual CS::Emanator *render_inspectors         \
(CORN::Container      &inspectors               \
,const CS::Emanator  *context                   \
,const std::string   &instance                  \
,CORN::Statistic      statistic) rendition_
//______________________________________________________________________________
#define RENDER_INSPECTORS_DECLARATION_PURE      \
   RENDER_INSPECTORS_DECLARATION = 0
//______________________________________________________________________________
#define RENDER_INSPECTORS_DEFINITION(rendering_class)    \
CS::Emanator *rendering_class::render_inspectors         \
(CORN::Container      &inspectors                        \
,const CS::Emanator  *context                            \
,const std::string   &instance                           \
,CORN::Statistic      statistic) rendition_
//______________________________________________________________________________
#define KNOW_EMANATOR(ephemeral,ontology_root)  \
CS::Emanator &emanator \
= CS::provide_emanators().know((nat32)this,instance,get_ontology(),ephemeral,context,ontology_root)
//______________________________________________________________________________
#endif
