#ifndef collate_engineH
#define collate_engineH

#include "corn/OS/directory_entry_name.h"
#include "corn/tabular/tabular_format.h"
#include "corn/seclusion.h"
#include "UED/convert/text_dBase_Excel_with_TDF/text_dbase_excel_with_tdf_convertor.h"
namespace UED
{
#define varible_definition_ALLOC_arbitrary 1024
class Database_file;
class Variable_format_0;

enum CS_Suite_Output_aggregation // was CS_Suite_Output_UED_file_type
{  unknown_aggregation
,  annual_aggr_aggregation
,  annual_aggregation   // was CS_annual
,  season_aggregation   // was CS_season
,  harvest_aggregation  // was CS_harvest
,  daily_aggregation    // was CS_daily
};
//______________________________________________________________________________
class Collate_engine
{

   const CORN::OS::Directory_name   &work_directory;
   const CORN::Text_list            &UED_names;
   const CORN::Text_list            &level_captions;
   /*160606 TDF_filename, already in convertor parameters
   const CORN::OS::File_name        *TDF_filename; // optional
   */

   //160606 convertor should already have format    CORN::Common_tabular_file_format  tabular_format;

   //161201 const CORN::Text_list            &exclude_directories;                        //160526
   const CORN::Seclusion            &exclude_directories;                        //161201
 protected:
   int argc; const char **argv;
 protected:
   class Output_collator
   : public Text_dBase_Excel_with_TDF_convertor
   {
      std::string               UED_name;
         ///< name of current UED files being processed
         /// (I.e. CropSyst annual or seasonal or harvest)
      //Variable_format_0 *variable_definition[varible_definition_ALLOC_arbitrary];
      nat16 variable_definition_count;// the number of entries in the array.
    private:

      contribute_ bool columns_identified;                                       //141013
      CS_Suite_Output_aggregation CS_suite_output_UED_file_type;
//      bool in_output_directory;                                                  //160526
         // CropSyst proper puts output files in "Output" directory
         // This directory is not considered a level

      // An arbitrary sized array of pointers to
      // the variable defnition records owned by the UED database
      // (so dont delete these).
      // It will only be setup once based of the variables identified in the UED file
      // in the first identified UED file (I.e. annual.UED or seasonal.UED)
    private: // References to Collate_engine or instanciators' members
      const CORN::Text_list             &level_captions;
      contribute_ const CORN::Text_list *leaf_level_names;
      //161201 const CORN::Text_list              &exclude_directories;                   //160526
      const CORN::Seclusion              &exclude_directories;                   //161201
    public:
      Output_collator
         (int argc, const char *argv[]
         ,const std::string                        &UED_name
         ,const CORN::Text_list                    &level_captions
         //160606 ,const CORN::Common_tabular_file_format   &tabular_format
         //161201 ,const CORN::Text_list                    &exclude_directories          //160526
         ,const CORN::Seclusion                    &exclude_directories          //161201
         );
      nat32 collate_level
         (const CORN::OS::Directory_name  &level_directory
         ,nat8                             level_index
         ,CORN::Text_list                 &parent_level_names
         ,bool work_directory = true
         );
         ///< \returns the number  of detail lines written (excluding header)
      virtual bool initialize()                                  initialization_;//160606
    private:
      bool identify_columns(nat8 level_index);                                   //141013
      virtual bool transfer_tuple_column
         (// Delineated_data_record &to_data_rec,
          CORN::Date_time_64 &tuple_date_time
         , float32 value
         , nat16 export_column_number
         , UED::Export_column  *export_column);
   };
   //___________________________________________________________________________
 public:
   Collate_engine
      (int argc, const char *argv[]
      ,const CORN::OS::Directory_name  &top_level_directory
      ,const CORN::Text_list           &UED_names
      ,const CORN::Text_list           &level_captions
      //161201 ,const CORN::Text_list           &exclude_directories                      //160526
      ,const CORN::Seclusion           &exclude_directories                      //161201
//160606 already available in collate_parameters      ,const CORN::OS::File_name       *TDF_filename =0
      );
   bool process();
   nat32 process_UED(const std::string &UED_name);
};
//_2014-09-03__________________________________________________Collate_engine__/
} // namespace UED


#endif
