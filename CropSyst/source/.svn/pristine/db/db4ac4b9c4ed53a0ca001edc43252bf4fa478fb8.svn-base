#ifndef OM_pools_commonH
#define OM_pools_commonH
#include "organic_matter/multiple_pool/OM_multiple_pool.h"
//#include "CS_suite/simulation/CS_inspection.h"
#include "CS_suite/observation/CS_observation.h"
class Soil_structure_interface;
class Organic_matter_initialization_parameters;                                  //111004
class Organic_matter_decomposition_parameters;                                   //111004
//______________________________________________________________________________
class Organic_matter_total_common
{  // common to the V4.5 Single pool and V4.4 multipools
public:
   float64 mass[xMASS_TOTAL_COUNT];
public:
   Organic_matter_total_common();
   void add(const Organic_biomatter_common &other);
   void clear();
};
//______________________________________________________________________________
class Organic_matter_pools_totals_common
{   // common to the V4.5 Single pool and V4.4 multipools
 protected:
   friend class Organic_matter_pools_multiple;
   friend class Organic_matter_pools_common;
   friend class Residues_V4_4;
   Organic_matter_total_common masses[ORGANIC_MATTER_TYPE_COUNT][OM_POSITION_COUNT];
   // Note, I think mineralization and immobilization only occur in subsurface,
   // so these might not need to be in the array by position
   // just a single sum for each organic matter type
   //070707    float64 N_immobilized_check_used; // Currently not needed by type[ORGANIC_MATTER_TYPE_COUNT];
   //NYN    float64 N_mineralized[ORGANIC_MATTER_TYPE_COUNT];
 public:
   Organic_matter_pools_totals_common();
   void add(const Organic_biomatter_common &org_BM);
};
//______________________________________________________________________________
class Organic_matter_pools_common
: public CORN::Unidirectional_list
{  // Lists all Organic_biomatter_V4_4 pools (including SOM and residue)
   // This table points to the listed Stable organic matter
   // pools with the new tillage it is convenient (faster) to
   // work with this table rather than looking up the pools
   // in the list.
   // This table also allows only those pools that are needed to be
   // allocated and listed (use provide_organic_matter_pool).
   // Currently plant residue and manure are not included in this table.
 protected:
   Organic_biomatter_common *organic_matter[ORGANIC_MATTER_TYPE_COUNT][MAX_soil_layers_alloc];   // References, do not delete these //060726
 protected:
   friend class Residues_V4_common;
   friend class Residues_V4_4;
   mutable Organic_matter_pools_totals_common *pools_totals;
 public: // The following were in Organic_matter_pools_profile_V4_4
   float64                           subsurface_contact_fraction;            // Always 1.0
 protected:
   const Organic_matter_decomposition_parameters &organic_matter_decomposition_parameters;
   const Soil_texture_interface              &soil_texture;                      //070707
   Soil_abiotic_environment_profile          &soil_abiotic_environment_profile;  //060726
   const Soil_layers_interface               &soil_layers;                       //060726
   const Soil_structure_interface            &soil_structure;                    //070725
   Soil_nitrogen_interface                   *soil_N;                // Owned by simulation // May be 0 if not running nitrogen
                                                                     // when 0, no totals are available and will need to be recalculated
   const Soil_disturbance                    *soil_disturbance;      // optional, when 0 then no tillage effect on decomposition //060807
   float64                              CO2_C_loss_daily[3];         // sum of subsurface CO2_losses (kg C/m2?)                  //060811
                                                                     // 0 it the total
                                                                     // 1 is SOM
                                                                     // 2 is residue
   float64                             today_OM_mineralized_kgN_m2;
   float64                             today_N_immobilized;                      //060717
   float64                             C_fraction_transfered_to_CO2;  // might be the same as total_daily_CO2_loss
 protected: // For process today (by layer)
   // pot_C_decomposition outputs
   soil_layer_array64(NO3_N_mass_immobilized);          // appears only subsurface
   soil_layer_array64(NH4_N_mass_immobilized);          // appears only subsurface
   soil_layer_array64(CO2_C_loss_subsurface_residue_and_OM);                          // Used by new denitrification (NO3_with_CO2_Profile) //060504
   soil_layer_array64(CO2_C_loss_subsurface_OM);                          // Used by new denitrification (NO3_with_CO2_Profile)  //080902
   soil_layer_array64(CO2_C_loss_subsurface_residue);                          // Used by new denitrification (NO3_with_CO2_Profile)   //080902
   soil_layer_array64(N_immobilization_demand_sum_subsurface);
   soil_layer_array64(residue_N_mineralized_subsurface);  // Some models doe not have residue N mineralization
   soil_layer_array64(SOM_N_mineralized_subsurface);
   soil_layer_array64(residue_SOM_N_mineralized_subsurface);
   float64 C_incorporated_by_tillage;  // currently used only for output         //060817
   // act_C_decomposition inputs
   soil_layer_array64(act_C_decomp_subsurface);
   float64 act_C_decomposed_from_all      [OM_POSITION_COUNT];
   float64 act_C_decomposed_from_residue  [OM_POSITION_COUNT];
   soil_layer_array64(N_deficit_for_immobilization_subsurface);                  //110928 moved from Organic_matter_pools_multiple
   soil_layer_array64(reduction_factor_subsurface);                              //110928 moved from Organic_matter_pools_multiple
 protected: // Moved from OM_pools_multiple
   soil_layer_array64(pot_C_decomp_subsurface);   float64 pot_C_decomp_surface  [OM_POSITION_COUNT];  //111004    
 public:
   Organic_matter_pools_common
      (const Organic_matter_decomposition_parameters &_organic_matter_decomposition_parameters //120912
      ,Soil_abiotic_environment_profile  &_soil_abiotic_environment_profile      //060726
      ,const Soil_layers_interface       &_soil_layers                           //060726
      ,const Soil_structure_interface    &_soil_structure                        //070725
      ,Soil_nitrogen_interface           *_soil_N
      ,const Soil_texture_interface      &_soil_texture);                        //070707
   virtual ~Organic_matter_pools_common();                                       //160616
   void invalidate_totals()                                             mutates_;
   virtual bool set_modified(bool _modified)                            mutates_;
   virtual  nat32 update_totals()                                     provision_;
   virtual bool start_day();                                                     //060330
   virtual bool process();
   virtual bool initialize_layer
      (nat8 horizon,nat8 layer
      ,float64 sand_fraction                                                     //060418
      ,float64 initial_organic_matter_carbon_mass
      ,float64 microbial_decomposition_const
      ,const Organic_matter_initialization_parameters &organic_matter_historical_parameters  //060215
      ,Soil_abiotic_environment_layer *point_soil_abiotic_environment_layer) = 0;//111004
   virtual bool clear_residues()                                   modification_;//160126
protected: // subprocesses
   void update_soil_N(nat8 residue_horizon);                       modification_;
   bool residue_detrition()                                        modification_;//090702
public:  // Events                                                               //060726
   bool respond_to_field_operation                                               //060726
      (float64           tillage_op_depth_m
      ,float64           tillage_op_mixing_fraction
      ,const Soil_texture_interface              &soil_texture                   //060807
      ,const Soil_disturbance *_soil_disturbance); //optional (may be 0 if not effect) //060807
   inline virtual const Soil_disturbance *know_soil_disturbance                  //070801
      (const Soil_disturbance *_soil_disturbance)                  modification_ //070801
      { return soil_disturbance = _soil_disturbance; };                          //070801
   virtual bool take_pools(CORN::Unidirectional_list &pools)       modification_;//111004(moved from Organic_matter_pools_multiple) 070808
      // This is used by respond_to_field_operation() (both for OM and residue pools) //070808
      // When residues are redistributes, new pools may be created.              //070808
      // This adds the new pools.                                                //070808
      // Used to recalibrate residues.
 public:  // Accessors get_total_xxx()
   virtual Organic_biomatter_common  *provide_organic_matter_pool                //070707
      (Organic_matter_type type,nat8 layer) = 0;
   virtual Organic_biomatter_common  *render_OM_pool                             //111001
      (Organic_matter_type     _type
      ,Organic_matter_position _position
      ,nat8                    _layer
      ,Organic_matter_cycling  _cycling
      ,RUSLE2_Residue_type     _RUSLE2_residue_type                              //060731
      ,float64                 _biomass
      ,float64                 _carbon_fraction
      ,float64                 _carbon_nitrogen_ratio
      ,float64                 _decomposition_constant                           //090703
      ,float64                 _detrition_constant                               //090413
      ,float64                 _area_per_mass      // = 0.0  stubble and surface residue_only?
      ,float64                 &_contact_fraction
      ,const Soil_texture_interface &_soil_texture                               //070707
      , Soil_abiotic_environment_layer * _soil_abiotic_environment_layer) rendition_ = 0;
   bool  is_included                                                             //060403
      (Organic_matter_type om_type
      , nat32 include_organic_matter_types_mask)                           const;
   // These should be get_total
   virtual float64 get_mass                                                      //060331
      (Mass_total mass
      ,nat32 include_organic_matter_types
      ,nat32 include_positions)                                           const;
   virtual float64 get_mass_from_layer_to_layer                                  //071214
      (Mass_total mass_total
      ,nat32 include_organic_matter_types
      ,nat8 from_layer
      ,nat8 to_layer
      ,float64 prorate_fraction_bottom_layer)                              const;
   virtual float64 get_nitrogen_mass_including
      ( nat32 include_organic_matter_types, nat32 include_positions)       const;
   virtual float64 get_total_N_immobilized()                               const;//060403
   inline virtual float64 get_immobilization_N(nat8 layer)                 const //061218
      { return NO3_N_mass_immobilized[layer] + NH4_N_mass_immobilized[layer]; }
   virtual float64 get_soil_organic_matter_mineralization_N(nat8  layer)   const;//060403
   virtual float64 get_soil_organic_matter_mineralization_profile_N()      const;//060403
      // probably the same as today_OM_mineralized_kgN_m2
           float64 get_CO2_C_loss_reported_daily(nat8 include_OM)          const;//060426
   virtual float64 get_soil_organic_matter_immobilization_profile_N()      const;//110918
   float64 get_C_decomposed_from_layer_to_layer // This is used only for output carbon annual report 090520
      (nat32 include_organic_matter_types                                       //090520
      ,nat8 from_layer
      ,nat8 to_layer
      ,float64 prorate_fraction_bottom_layer)                              const;
   inline virtual float64 get_C_decomposed_from_residue                          //060817
      (Organic_matter_position from_position)                              const { return act_C_decomposed_from_residue[from_position]; }
   inline virtual float64 get_C_incorporated_by_tillage()                  const { return C_incorporated_by_tillage; }           //060817
   inline float64 *get_CO2_C_loss_profile_residue_and_OM()          modification_{ return CO2_C_loss_subsurface_residue_and_OM; }//060504
   inline float64 *get_CO2_C_loss_profile_OM()                      modification_{ return CO2_C_loss_subsurface_OM; }            //080902
   inline float64 *get_CO2_C_loss_profile_residue()                 modification_{ return CO2_C_loss_subsurface_residue; }       //080902
 protected:
   virtual void clear_totals();
   virtual bool transfer_carbon_and_nitrogen_between_pools();                    //111004 moved from Organic_matter_pools_multiple   
 public:
   Organic_biomatter_common *find_similar_organic_biomatter
      (const Organic_biomatter_common &to_other);                                //060605
 public: // Used only by the single pool model
   inline const Organic_biomatter_common *ref_organic_biomatter
      (Organic_matter_type OM_type, nat8 layer)                            const //070712
      { return organic_matter[OM_type][layer]; }
   modifiable_ virtual Organic_biomatter_common_pool *get_metastable_SOM_ref(nat8 layer)    = 0;//110929
   modifiable_ virtual Organic_biomatter_common_pool *get_microbial_biomass_ref(nat8 layer) = 0;//110929
 protected:
   float64 determine_reduction_factor
      (nat8   residue_horizon
      ,float64 soil_layer_NH4_N_mass_kg_ha
      ,float64 soil_layer_NO3_N_mass_kg_ha
      ,float64 N_immobilization_demand     // Nitrogen_Immobilization_Demand
      ,float64 &N_deficit_for_immobilization)                      modification_;//110928
      // N_deficit_for_immobilization returned
   bool determine_reduction_factor_layers()                        modification_;//110928
   virtual float64 potential_C_decomposition();                                  //111004
      ///< \return the potential carbon decomposition (the return value is not currently used probably could return bool )
   virtual float64 actual_C_decomposition();                                     //111004
      ///< \return the actual carbon decomposition  (the return value is not currently used probably could return bool ) )
   virtual bool tally_immobilization()                             modification_;
 protected:
   float64 transfer_carbon_and_nitrogen(float64 &CO2_loss_SOM,float64 &CO2_loss_residue); //111004 was in multiple
 public:
   //120912 this was added so we can store historical equilibriated OM for futher future scenario runs
   virtual nat32 write(std::ostream &)                              performs_IO_ = 0; //150728_120912
   virtual bool read(std::istream &stream)                          performs_IO_ = 0; //120912
   RENDER_INSPECTORS_DECLARATION;
   contribute_ CS::Emanator *emanator_known;                                     //160616
   inline const char *get_ontology()                                       const { return "organic_matter"; } //160616
};
//______________________________________________________________________________
#endif

