#ifndef infiltration_cascade_hourlyH
#define infiltration_cascade_hourlyH
#include "corn/chronometry/time_types.hpp"                                       //LML 150219

#include "soil/infiltration_cascade_common.h"
#include "soil/layers_interface.h"                                               //LML 150219
#include "soil/texture_interface.h"                                              //LML 150219
#include "corn/dynamic_array/dynamic_array_T.h"                                  //LML 150219

class Soil_surface_infiltration_Green_Ampt;
//______________________________________________________________________________
class Soil_infiltration_cascade_hourly
: public  Soil_infiltration_cascade_common
{
      // hydrology recorded hourly (index 0 is for hour 0 (midnight)).
      // the values are for the end of the timestep (hour).
      // These are dynamically allocated because constructor has arguments
   const Soil_texture_interface &soil_texture;                                   //070316
 public:
   float64 Minimum_Saturated_Hydraulic_Conductivity;                             //130325
   Soil_surface_infiltration_Green_Ampt *surface_infiltration_Green_Ampt;        //140501 was Green_Ampt_infiltration_for_numerical_runoff;   //130503
 public: // Constructor
   Soil_infiltration_cascade_hourly
      (
       const Soil_layers_interface     &_soil_layers                             //140424
      ,const Soil_texture_interface    &_soil_texture                            //140424
      ,const Soil_hydraulic_properties_interface &_soil_hydraulic_properties     //140423
      ,Soil_hydrology_interface &_hydrology
/*160805
      #ifdef OLD_EVAPORATE
      //160720 ,modifiable_ Physical::Water_depth        &evaporation_potential_remaining    //160413
      ,modifiable_ CORN::Dynamic_array<float64> &evaporation_potential_remaining //160720
      #endif
*/
      ,CropSyst::Soil_runoff  *_runoff   // Optional                             //130308
      ,CropSyst::Pond         &_pond);                                           //130308
   #if (DIRECTED_IRRIGATION == 2)
   Soil_infiltration_cascade_hourly                                              //140609
      (const Soil_infiltration_cascade_hourly &from_copy);
   virtual Soil_infiltration_nominal *copy(float32 fraction)               const;//140609
   #endif
   virtual bool initialize()                                       modification_;
 public:
   virtual bool infiltrate
      (float64                       water_entering_soil_not_irrigation
      ,float64                       management_irrigation
      ,float64                       management_auto_irrigation_concentration
      ,Dynamic_water_entering_soil *non_runoff_water_entering_in_intervals_mm    //990204
      ,Dynamic_water_entering_soil *irrigation_water_entering_in_intervals_mm    //070119 optional (may be 0)
      ,const CORN::Dynamic_array<float32>    &runon_in_intervals
      ,CORN::Dynamic_array<float32>          &runoff_in_intervals) modification_;
      // Returns the amount of infiltration (m of water depth?)
 private: // These variables can carry over multiple days.
   soil_layer_array64(hours_to_field_capacity);                                  //080609
 private: // working variables conveniently calculated once so we don't have to pass around.
    Layer number_layers;          // Simply the number of soil layers, moved here so not have to pass to process_infiltration
 public:
   void process_hour                                                             //140423
      (CORN::Hour       hour                                                     //130325
      ,float64    water_input_hourly
      ,float64   &surface_out_flow )                               modification_;//140319
         // surface_out_flow returns meter  (in the hour)                        //130127
         // surface_out_flow is essentially contribution to runoff and/or ponding
 private:
   float64 calc_hours_to_field_capacity                                          //120716
      (float64 potential_at_field_capacity)                                const;
   float64 calc_max_water_content_during_infiltration
      ( float64 flow_in
      , float64 KSat
      , float64 air_entry_potential
      , float64 bValue
      , float64 WCSat
      , CORN::Seconds time_step)                                           const;
   float64 distribute_excess_flow_upwards
      ( nat8 from_layer
      , float64 &excess_flow_in
      , soil_layer_array64(water_content))                         modification_;
};
//_2007-01-05___________________________________________________________________
#endif
