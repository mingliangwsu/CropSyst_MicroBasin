
#include "soil/chemicals_profile.h"
#include "soil.h"
#include "pond.h"
#include "soil/erosion_RUSLE.h"
#include "csvc.h"
#include "soil/chemical_balance.h"
#ifdef NITROGEN
#  include "soil/nitrogen_profile.h"
#endif

#include "cs_UED_annual.h"
#include "organic_matter/OM_residues_profile_abstract.h"
#include "common/residue/residues_interface.h"

namespace CropSyst                                                               //160629
{
//______________________________________________________________________________
void Annual_data_record::update
(const CropSyst::Soil&     soil
, CropSyst::Annual_accumulators&     ANNL_accumulators
, Residues_interface*      residue_pools_kg_m2
, Organic_matter_residues_profile_abstract *residue_and_organic_matter_profile   //050726
, CropSyst::Pond&          pond                                                  //130309
, int32                    alloc_ID_  // Only for LADSS
, int16                    year_      // Only for LADSS
)
{
   year_LADSS     = year_;
   a_out_ID = (int32)alloc_ID_ * (int32)10000 + (int32)year_LADSS;  // Note, this now actually generated by Oracle
   alloc_ID = alloc_ID_;
#ifdef NITROGEN
   NO3_Profile *NO3 = soil.chemicals ? soil.chemicals->NO3 : 0;
   NH4_Profile *NH4 = soil.chemicals ? soil.chemicals->NH4 : 0;
#endif
   residue_ground_cover           = residue_pools_kg_m2 ? residue_pools_kg_m2->get_total_fract_ground_cover    //050726
      (INCLUDE_POSITION_FLAT_SURFACE | INCLUDE_POSITION_STUBBLE_SURFACE) : 0;
   soil_loss                      = (soil.erosion) ? soil.erosion->total_soil_loss : 0.0;
   RUSLE_C_factor                 = (soil.erosion) ? soil.erosion->
      C_factor_tally.get_sum()                                                   //160506
      : 0.0;    //050505
   #ifndef CS_INSPECTOR_VERSION
   ET_pot                         = ANNL_accumulators.pot_evapotranspiration;
   ET_act                         = ANNL_accumulators.act_evapotranspiration;
   ET_ref                         = ANNL_accumulators.ref_evapotranspiration;    //130723
   transp_pot                     = ANNL_accumulators.pot_transpiration;
   transp_act                     = CORN::must_be_0_or_greater<float64>(ANNL_accumulators.act_transpiration);  //170326
   evap_soil_pot                  = ANNL_accumulators.pot_soil_evaporation;
   evap_soil_act                  = ANNL_accumulators.act_soil_evaporation;
   evap_residue_pot               = ANNL_accumulators.pot_residue_evaporation;
   evap_residue_act               = ANNL_accumulators.act_residue_evaporation;
   irrigation                     = ANNL_accumulators.irrigation;
   precipitation                  = ANNL_accumulators.precip_m;
   crop_water_intrcpt             = ANNL_accumulators.crop_intercept;            //160419
    residue_water_intrcpt         = ANNL_accumulators.residue_interception;
   surface_water_runoff           = ANNL_accumulators.runoff;
   ponded_water                   = pond.get_depth();
   water_enter_soil               = ANNL_accumulators.act_water_entering_soil;
   soil_water_drainage            = ANNL_accumulators.reported_drainage;
   #endif
   soil_water_balance             = ANNL_accumulators.water_balance;
   biomass_grazed                 = ANNL_accumulators.biomass_grazed;
   #ifdef NITROGEN
   if (NO3 && NH4)                                                               //140829
   {
      #ifndef CS_INSPECTOR_VERSION
      if (NO3 && NO3->ANNL_bal_accums && NH4->ANNL_bal_accums)                   //140829_990409
      {
         N_inorganic_applied        =                                            //160323
              (NO3->ANNL_bal_accums->get_applied(true)
              +NH4->ANNL_bal_accums->get_applied(true));
         N_total_applied = N_inorganic_applied + N_organic_applied;              //160323
         N_leached        =
            #ifdef OFOOT_VERSION
              (NO3->ANNL_bal_accums->get_reported_leached(true)                  //140620
              +NH4->ANNL_bal_accums->get_reported_leached(true));                //140620
            #else
              (NO3->ANNL_bal_accums->get_reported_leached(true)                  //981230
              +NH4->ANNL_bal_accums->get_reported_leached(true));                //981230
            #endif
         N_uptake         =
              (NO3->ANNL_bal_accums->get_uptake(true)
              +NH4->ANNL_bal_accums->get_uptake(true));
      }
      N_auto_uptake        = ANNL_accumulators.N_fert_requirements;
      #endif
   #ifndef CS_INSPECTOR_VERSION
      //170326 Now mineralization vector is stored,
      // this output is now processed from collator using new strata classes
   for (nat8 i = 0; i < key_profile_sum_depths_COUNT; i++)                       //160629
   {
      N_OM_mineralization[i] = ANNL_accumulators.N_OM_mineralization[i];
      N_OM_immobilization[i] = ANNL_accumulators.N_OM_immobilization[i];
   }
   #endif
   #ifndef CS_INSPECTOR_VERSION
      N_mineralized_OM           = ANNL_accumulators.OM_N_mineralization;
      N_immobilization           = ANNL_accumulators.N_immobilization;
      N_mineralization           = (ANNL_accumulators.OM_N_mineralization);
      N_total_applied               = ANNL_accumulators.total_N_applied;         //160323
      N_inorganic_applied           = ANNL_accumulators.inorganic_N_applied;     //160323
      N_organic_applied             = ANNL_accumulators.organic_N_applied;
      N_organic_gaseous_loss        = ANNL_accumulators.NH3_volatilization_loss;
      N_inorganic_gaseous_loss      = ANNL_accumulators.inorganic_NH4_to_atmosphere;
      N_fixation                    = ANNL_accumulators.N_fixation;
   #endif

   #ifdef USE_INSPECTOR_VECTOR

    //170327 will use Inspector_vector and strata will be calculated in collation

   #else
      if (residue_and_organic_matter_profile)
      {  C_soil_surface = (residue_and_organic_matter_profile->sum_carbon_to_depth_kg_m2(INCLUDE_RESIDUE_OM|INCLUDE_SOM_AND_MICROBIAL,0,true));
         for (nat8 i = 0; i < key_profile_sum_depths_COUNT; i++)                 //160629
         {
            C_soil[i]               = (residue_and_organic_matter_profile->sum_carbon_to_depth_kg_m2(INCLUDE_RESIDUE_OM|INCLUDE_SOM_AND_MICROBIAL  ,key_profile_sum_depths[i],false));
            C_SOM[i]                = (residue_and_organic_matter_profile->sum_carbon_to_depth_kg_m2(INCLUDE_SOM_AND_MICROBIAL                     ,key_profile_sum_depths[i],false));
            C_microbial[i]          = (residue_and_organic_matter_profile->sum_carbon_to_depth_kg_m2(INCLUDE_MICROBIAL_BM                          ,key_profile_sum_depths[i],false));
            C_labile[i]             = (residue_and_organic_matter_profile->sum_carbon_to_depth_kg_m2(INCLUDE_LABILE_ACTIVE_SOM                     ,key_profile_sum_depths[i],false));
            C_metastable[i]         = (residue_and_organic_matter_profile->sum_carbon_to_depth_kg_m2(INCLUDE_METASTABLE_ACTIVE_SOM                 ,key_profile_sum_depths[i],false));
            C_passive[i]            = (residue_and_organic_matter_profile->sum_carbon_to_depth_kg_m2(INCLUDE_PASSIVE_SOM                           ,key_profile_sum_depths[i],false));
            C_residues[i]           = (residue_and_organic_matter_profile->sum_carbon_to_depth_kg_m2(INCLUDE_RESIDUE_OM                            ,key_profile_sum_depths[i],false));
            C_decomposed_SOM[i]     = (ANNL_accumulators.C_decomposed_SOM_profile);
            C_decomposed_residue[i] = (ANNL_accumulators.C_decomposed_residue_profile);
         }
         C_residues_surface= (residue_and_organic_matter_profile->sum_carbon_to_depth_kg_m2(INCLUDE_RESIDUE_OM,0.0,true));
#ifdef NYN
090111 not sure what happened to this, but these never seemed to have been accumulated
         C_residues_surface_minimum = residue_and_organic_matter_profile->get_residue_carbon_surface_annual_minimum();
         C_residues_profile_minimum = residue_and_organic_matter_profile->get_residue_carbon_profile_annual_minimum();
         C_residues_5cm_minimum 		= residue_and_organic_matter_profile->get_residue_carbon_to_5cm_annual_minimum();
         C_residues_30cm_minimum 	= residue_and_organic_matter_profile->get_residue_carbon_to_30cm_annual_minimum();
         C_residues_60cm_minimum 	= residue_and_organic_matter_profile->get_residue_carbon_to_60cm_annual_minimum();
         C_residues_90cm_minimum 	= residue_and_organic_matter_profile->get_residue_carbon_to_90cm_annual_minimum();
#endif
      }
   #endif

      #ifndef CS_INSPECTOR_VERSION
      CO2_C_loss_OM       = (ANNL_accumulators.gaseous_CO2_C_loss_OM);
      CO2_C_loss_SOM      = (ANNL_accumulators.gaseous_CO2_C_loss_SOM);
      CO2_C_loss_residue  = (ANNL_accumulators.gaseous_CO2_C_loss_residue);
      #endif
      C_decomposed_residue_flat        = (ANNL_accumulators.C_decomposed_residue_flat);
      C_decomposed_residue_stubble     = (ANNL_accumulators.C_decomposed_residue_stubble);
      C_decomposed_residue_attached    = (ANNL_accumulators.C_decomposed_residue_attached);
      C_incorporated_by_tillage        = (ANNL_accumulators.C_incorporated_by_tillage);
      C_removed_by_harvest             = (ANNL_accumulators.C_removed_by_harvest);
      plant_C_mass_canopy = (ANNL_accumulators.plant_C_mass_canopy);
      plant_C_mass_root   = (ANNL_accumulators.plant_C_mass_roots);
      denitrification_X = soil.chemicals->NO3->ANNL_bal_accums->get_transformed_to(true);
      N_soil_profile
      = soil.chemicals->NO3->ANNL_bal_accums->get_current_profile_content(true)
      + soil.chemicals->NH4->ANNL_bal_accums->get_current_profile_content(true);      // Mineral N in the soil    (mineral profile N)  // this is only for luca
      #ifndef CS_INSPECTOR_VERSION
      N_N2O_loss_denitrification= ANNL_accumulators.N2O_loss_denitrification;    //111207
      N_N2O_loss_nitrification  = ANNL_accumulators.N2O_loss_nitrification;      //111207
      #endif
      #ifdef NYI
      N_soil_inputs = ANNL_VATE_soil_N_input;      // total N inputs to the soil     (check that N applied include organic N) // this is only for luca
      N_soil_output = ANNL_VATE_soil_N_output; // total N outputs from the soil  // this is only for luca
      #endif
   #endif
   }
}
//______________________________________________________________________________
bool Annual_data_record::expect_structure(bool for_write)
{  CORN::Data_record::expect_structure(for_write);

   expect_int32   ("a_out_id",               a_out_ID);  // currently used only by LADSS
   expect_int32   ("alloc_id",               alloc_ID);  // currently used only by LADSS
   expect_int16   ("year",                   year_LADSS);      // currently used only by LADSS
   expect_float32("residue_ground_cover",residue_ground_cover);
   expect_float32("soil_loss",soil_loss);
   expect_float32("RUSLE_C_factor",RUSLE_C_factor);
   #ifndef CS_INSPECTOR_VERSION
   expect_float32("ET_pot",ET_pot);
   expect_float32("ET_act",ET_act);
   expect_float32("ET_ref",ET_ref);                                              //130723
   expect_float32("transp_pot",transp_pot);
   expect_float32("transp_act",transp_act);
   expect_float32("evap_soil_pot",evap_soil_pot);
   expect_float32("evap_soil_act",evap_soil_act);
   expect_float32("evap_residue_pot",evap_residue_pot);
   expect_float32("evap_residue_act",evap_residue_act);
   expect_float32("irrigation",irrigation);
   expect_float32("precipitation",precipitation);
   expect_float32("crop_water_intrcpt",crop_water_intrcpt);                      //160419
   expect_float32("residue_water_intrcpt",residue_water_intrcpt);
   expect_float32("surface_water_runoff",surface_water_runoff);
   expect_float32("ponded_water",ponded_water);
   expect_float32("water_enter_soil",water_enter_soil);
   expect_float32("soil_water_drainage",soil_water_drainage);
   #endif
   expect_float32("soil_water_balance",soil_water_balance);
   expect_float32("biomass_grazed",biomass_grazed);
   #ifdef NITROGEN
   #ifndef CS_INSPECTOR_VERSION
   expect_float32("N_applied",N_total_applied);                                  //160323
   expect_float32("N_leached",N_leached);
   expect_float32("N_uptake",N_uptake);
   expect_float32("N_auto_uptake",N_auto_uptake);
   expect_float32("N_inorganic_applied",N_inorganic_applied);
   expect_float32("N_organic_applied",N_organic_applied);
   expect_float32("N_organic_gaseous_loss",N_organic_gaseous_loss);
   expect_float32("N_inorganic_gaseous_loss",N_inorganic_gaseous_loss);
   expect_float32("N_fixation",N_fixation);
   expect_float32 ("N_denitrification",   denitrification_X);
   expect_float32 ("N_N2O_loss_denitrification",N_N2O_loss_denitrification);     //111207
   expect_float32 ("N_N2O_loss_nitrification",N_N2O_loss_nitrification);         //111207
   #endif
   expect_float32 ("N_soil_profile",      N_soil_profile);      // Mineral N in the soil    (mineral profile N)  // this is only for luca
   #ifdef NYI
   expect_float32 ("N_inputs",            N_soil_inputs);      // total N inputs to the soil     (check that N applied include organic N) // this is only for luca
   expect_float32 ("N_outputs",           N_soil_output); // total N outputs from the soil  // this is only for luca
   #endif
//NYI/*070730_*/    if (residue_and_organic_matter_profile)
   {
   #ifndef CS_INSPECTOR_VERSION
   expect_float32("N_mineralized_residue",N_mineralized_residue);
   expect_float32("N_mineralized_org_fert",N_mineralized_org_fert);
   expect_float32("N_mineralized_OM",N_mineralized_OM);
   expect_float32("N_immobilization",N_immobilization);
   expect_float32("N_mineralization",N_mineralization);
   #endif

   expect_float32 ("N_OM_mineralization_profile",N_OM_mineralization[0]);        //061116
   expect_float32 ("N_OM_mineralization_5cm"   ,N_OM_mineralization[1]);         //061116
   expect_float32 ("N_OM_mineralization_10cm"  ,N_OM_mineralization[2]);         //090415
   expect_float32 ("N_OM_mineralization_15cm"  ,N_OM_mineralization[3]);         //090415
   expect_float32 ("N_OM_mineralization_30cm"  ,N_OM_mineralization[4]);         //061116
   expect_float32 ("N_OM_mineralization_60cm"  ,N_OM_mineralization[5]);         //061116
   expect_float32 ("N_OM_mineralization_90cm"  ,N_OM_mineralization[6]);         //061116
   expect_float32 ("N_OM_immobilization_profile",N_OM_immobilization[0]);        //061116
   expect_float32 ("N_OM_immobilization_5cm"   ,N_OM_immobilization[1]);         //061116
   expect_float32 ("N_OM_immobilization_10cm"  ,N_OM_immobilization[2]);         //090415
   expect_float32 ("N_OM_immobilization_15cm"  ,N_OM_immobilization[3]);         //090415
   expect_float32 ("N_OM_immobilization_30cm"  ,N_OM_immobilization[4]);         //061116
   expect_float32 ("N_OM_immobilization_60cm"  ,N_OM_immobilization[5]);         //061116
   expect_float32 ("N_OM_immobilization_90cm"  ,N_OM_immobilization[6]);         //061116
   }
   #endif
   #ifdef PHOSPHORUS
   expect_float32("P_uptake",P_uptake);                                          //110801
   expect_float32("P_uptake",P_applied);                                         //110801
   #endif
   //NYI/*070730_*/       if (residue_and_organic_matter_profile)
      {
   expect_float32("C_soil_surface"  ,C_soil_surface);                            //080228
   expect_float32("C_soil_profile"  ,C_soil[0]);
   expect_float32("C_soil_5cm"      ,C_soil[1]);                                 //060418
   expect_float32("C_soil_10cm"     ,C_soil[2]);                                 //090415
   expect_float32("C_soil_15cm"     ,C_soil[3]);                                 //090415
   expect_float32("C_soil_30cm"     ,C_soil[4]);
   expect_float32("C_soil_60cm"     ,C_soil[5]);                                 //061109
   expect_float32("C_soil_90cm"     ,C_soil[6]);                                 //061109


   expect_float32("C_SOM_profile"         ,C_SOM[0]);                            //060418
   expect_float32("C_SOM_5cm"             ,C_SOM[1]);                            //060418
   expect_float32("C_SOM_10cm"            ,C_SOM[2]);                            //090415
   expect_float32("C_SOM_15cm"            ,C_SOM[3]);                            //090415
   expect_float32("C_SOM_30cm"            ,C_SOM[4]);                            //060418
   expect_float32("C_SOM_60cm"            ,C_SOM[5]);                            //061109
   expect_float32("C_SOM_90cm"            ,C_SOM[6]);                            //061109
   //NYI/*070730_*/    if (residue_and_organic_matter_profile->get_model() == V4_4_ORGANIC_MATTER_AND_RESIDUE)
   {
   expect_float32("C_microbial_profile"   ,C_microbial[0]);                      //060418
   expect_float32("C_microbial_5cm"       ,C_microbial[1]);                      //060418
   expect_float32("C_microbial_10cm"      ,C_microbial[2]);                      //090415
   expect_float32("C_microbial_15cm"      ,C_microbial[3]);                      //090415
   expect_float32("C_microbial_30cm"      ,C_microbial[4]);                      //060418
   expect_float32("C_microbial_60cm"      ,C_microbial[5]);                      //061109
   expect_float32("C_microbial_90cm"      ,C_microbial[6]);                      //061109
   expect_float32("C_labile_profile"      ,C_labile[0]);                         //060418
   expect_float32("C_labile_5cm"          ,C_labile[1]);                         //060418
   expect_float32("C_labile_10cm"         ,C_labile[2]);                         //090415
   expect_float32("C_labile_15cm"         ,C_labile[3]);                         //090415
   expect_float32("C_labile_30cm"         ,C_labile[4]);                         //060418
   expect_float32("C_labile_60cm"         ,C_labile[5]);                         //061109
   expect_float32("C_labile_90cm"         ,C_labile[6]);                         //061109
   expect_float32("C_metastable_profile"  ,C_metastable[0]);                     //060418
   expect_float32("C_metastable_5cm"      ,C_metastable[1]);                     //060418
   expect_float32("C_metastable_10cm"     ,C_metastable[2]);                     //090415
   expect_float32("C_metastable_15cm"     ,C_metastable[3]);                     //090415
   expect_float32("C_metastable_30cm"     ,C_metastable[4]);                     //060418
   expect_float32("C_metastable_60cm"     ,C_metastable[5]);                     //061109
   expect_float32("C_metastable_90cm"     ,C_metastable[6]);                     //061109
   expect_float32("C_passive_profile"     ,C_passive[0]);                        //060418
   expect_float32("C_passive_5cm"         ,C_passive[1]);                        //060418
   expect_float32("C_passive_10cm"        ,C_passive[2]);                        //090415
   expect_float32("C_passive_15cm"        ,C_passive[3]);                        //090415
   expect_float32("C_passive_30cm"        ,C_passive[4]);                        //060418
   expect_float32("C_passive_60cm"        ,C_passive[5]);                        //061109
   expect_float32("C_passive_90cm"        ,C_passive[6]);                        //061109
   }
   #ifndef CS_INSPECTOR_VERSION
   expect_float32("CO2_C_loss_OM"         ,CO2_C_loss_OM);                       //060426
   expect_float32("CO2_C_loss_SOM"        ,CO2_C_loss_SOM);                      //060426
   expect_float32("CO2_C_loss_residue"    ,CO2_C_loss_residue);                  //060426
   #endif

   expect_float32("C_residues_surface"          ,  C_residues_surface);          //070508
   expect_float32("C_residues_profile"          ,  C_residues[0]);               //070508
   expect_float32("C_residues_5cm"              ,  C_residues[1]);               //070508
   expect_float32("C_residues_10cm"             ,  C_residues[2]);               //090415
   expect_float32("C_residues_15cm"             ,  C_residues[3]);               //090415
   expect_float32("C_residues_30cm"             ,  C_residues[4]);               //070508
   expect_float32("C_residues_60cm"             ,  C_residues[5]);               //070508
   expect_float32("C_residues_90cm"             ,  C_residues[6]);               //070508

   // this is the minimum surface residue encountered during the year
   expect_float32("C_residues_surface_minimum"  ,  C_residues_surface_minimum);  //070508
   expect_float32("C_residues_profile_minimum"  ,  C_residues[0]);               //070521
   expect_float32("C_residues_to_5cm_minimum"   ,  C_residues[1]);               //070521
   expect_float32("C_residues_to_10cm_minimum"  ,  C_residues[2]);               //090415
   expect_float32("C_residues_to_15cm_minimum"  ,  C_residues[3]);               //090415
   expect_float32("C_residues_to_30cm_minimum"  ,  C_residues[4]);               //070521
   expect_float32("C_residues_to_60cm_minimum"  ,  C_residues[5]);               //070521
   expect_float32("C_residues_to_90cm_minimum"  ,  C_residues[6]);               //070521

   expect_float32("C_decomposed_SOM_profile"    ,C_decomposed_SOM[0]);           //060817
   expect_float32("C_decomposed_SOM_5cm"        ,C_decomposed_SOM[1]);           //060817
   expect_float32("C_decomposed_SOM_10cm"       ,C_decomposed_SOM[2]);           //060817
   expect_float32("C_decomposed_SOM_15cm"       ,C_decomposed_SOM[3]);           //060817
   expect_float32("C_decomposed_SOM_30cm"       ,C_decomposed_SOM[4]);           //060817
   expect_float32("C_decomposed_SOM_60cm"       ,C_decomposed_SOM[5]);           //060817
   expect_float32("C_decomposed_SOM_90cm"       ,C_decomposed_SOM[6]);           //060817

   expect_float32("C_decomposed_residue_profile",C_decomposed_residue[0]);       //060817
   expect_float32("C_decomposed_residue_5cm"    ,C_decomposed_residue[1]);       //060817
   expect_float32("C_decomposed_residue_10cm"   ,C_decomposed_residue[2]);       //060817
   expect_float32("C_decomposed_residue_15cm"   ,C_decomposed_residue[3]);       //060817
   expect_float32("C_decomposed_residue_30cm"   ,C_decomposed_residue[4]);       //060817
   expect_float32("C_decomposed_residue_60cm"   ,C_decomposed_residue[5]);       //060817
   expect_float32("C_decomposed_residue_90cm"   ,C_decomposed_residue[6]);       //060817

   expect_float32("C_decomposed_residue_flat"    ,C_decomposed_residue_flat);    //060817
   expect_float32("C_decomposed_residue_stubble" ,C_decomposed_residue_stubble); //060817
   expect_float32("C_decomposed_residue_attached",C_decomposed_residue_attached);//060817
   }
   expect_float32("C_incorporated_by_tillage"      ,C_incorporated_by_tillage);  //060817
   expect_float32("C_removed_by_harvest"           ,C_removed_by_harvest);       //060817
   expect_float32("plant_C_mass_canopy"         ,plant_C_mass_canopy);           //110915
   expect_float32("plant_C_mass_root"           ,plant_C_mass_root);             //110915
   structure_defined = true;                                                     //120314
   return true;
}
//______________________________________________________________________________
Annual_data_source::Annual_data_source(UED::Database_file_indexed* _database )
: UED::Tuple_data_source(_database,UED::Record_type_distinguisher_interface::UED_data_set_year_var_units ,UT_year,simulated_quality)
, Annual_data_record()
{
   #ifndef CS_INSPECTOR_VERSION
   add_field2(annual_section,"residue_ground_cover"       ,CSVC_residue_ground_cover                        ,UC_percent,UT_arbitrary_date);
   add_field2(annual_section,"soil_loss"                  ,CSVC_soil_erosion_loss_time_step_sum             ,UC_tn_ha,UT_arbitrary_date);
   add_field2(annual_section,"RUSLE_C_factor"             ,CSVC_soil_erosion_RUSLE_C_factor_time_step_sum   ,UC_factor,UT_arbitrary_date);
   add_field2(annual_section,"ET_pot"                     ,CSVC_weather_ET_pot_time_step_sum                ,UC_m    ,UT_arbitrary_date);
   add_field2(annual_section,"ET_act"                     ,CSVC_weather_ET_act_time_step_sum                ,UC_m    ,UT_arbitrary_date);
   add_field2(annual_section,"ET_ref"                     ,CSVC_weather_ET_ref_time_step_sum                ,UC_m    ,UT_arbitrary_date); //130723
   add_field2(annual_section,"transp_pot"                 ,CSVC_crop_base_transp_pot_time_step_sum          ,UC_m    ,UT_arbitrary_date);
   add_field2(annual_section,"transp_act"                 ,CSVC_crop_base_transp_act_time_step_sum          ,UC_m    ,UT_arbitrary_date);
   add_field2(annual_section,"evap_soil_pot"              ,CSVC_soil_base_evap_pot_time_step_sum            ,UC_m    ,UT_arbitrary_date);
   add_field2(annual_section,"evap_soil_act"              ,CSVC_soil_base_evap_act_time_step_sum            ,UC_m    ,UT_arbitrary_date);
   add_field2(annual_section,"evap_residue_pot"           ,CSVC_residue_pot_evap_time_step_sum              ,UC_m    ,UT_arbitrary_date);
   add_field2(annual_section,"evap_residue_act"           ,CSVC_residue_act_evap_time_step_sum              ,UC_m    ,UT_arbitrary_date);
   add_field2(annual_section,"irrigation"                 ,CSVC_mgmt_irrig_applied_time_step_sum            ,UC_m    ,UT_arbitrary_date);
   add_field2(annual_section,"precipitation"              ,CSVC_weather_precipitation_time_step_sum         ,UC_m    ,UT_arbitrary_date);
   add_field2(annual_section,"crop_water_intrcpt"         ,CSVC_crop_base_water_intrcpt_time_step_sum       ,UC_m    ,UT_arbitrary_date);
   add_field2(annual_section,"residue_water_intrcpt"      ,CSVC_residue_water_intrcpt_time_step_sum         ,UC_m    ,UT_arbitrary_date);
   add_field2(annual_section,"surface_water_runoff"       ,CSVC_soil_runoff_surface_water_runoff_time_step_sum,UC_m  ,UT_arbitrary_date);
   add_field2(annual_section,"ponded_water"               ,CSVC_soil_pond_water_depth                       ,UC_m    ,UT_arbitrary_date);
   add_field2(annual_section,"water_enter_soil"           ,CSVC_soil_base_water_entering_time_step_sum      ,UC_m    ,UT_arbitrary_date);
   add_field2(annual_section,"soil_water_drainage"        ,CSVC_soil_base_water_drainage_time_step_sum      ,UC_m    ,UT_arbitrary_date);
   #endif
   add_field2(annual_section,"biomass_grazed"             ,CSVC_mgmt_biomass_grazed_time_step_sum           ,UC_m    ,UT_arbitrary_date);
   add_field2(annual_section,"soil_water_balance"         ,CSVC_soil_base_water_balance_time_step_sum       ,UC_m    ,UT_arbitrary_date);

#ifdef NITROGEN
   add_field2(annual_section,"N_applied"                  ,CSVC_mgmt_N_applied_time_step_sum                ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"N_leached"                  ,CSVC_soil_N_leached_time_step_sum                ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"N_uptake"                   ,CSVC_crop_N_uptake_time_step_sum                 ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"N_auto_uptake"              ,CSVC_crop_N_automatic_uptake_time_step_sum       ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"N_mineralized_residue"      ,CSVC_residue_mineralized_time_step_sum           ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"N_mineralized_org_fert"     ,CSVC_residue_manure_mineralized_time_step_sum    ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"N_mineralized_OM"           ,CSVC_organic_matter_mineralized_time_step_sum    ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"N_immobilization"           ,CSVC_soil_N_immobilization_time_step_sum         ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"N_mineralization"           ,CSVC_misc_N_total_mineralization_time_step_sum   ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"N_organic_applied"          ,CSVC_mgmt_N_organic_applied_time_step_sum        ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"N_organic_gaseous_loss"     ,CSVC_mgmt_N_organic_gaseous_loss_time_step_sum   ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"N_inorganic_gaseous_loss"   ,CSVC_mgmt_N_inorganic_gaseous_loss_time_step_sum ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"N_fixation"                 ,CSVC_crop_N_fixation_time_step_sum               ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_soil_surface"             ,CSVC_soil_C_all_surface                          ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_soil_profile"             ,CSVC_soil_C_all_profile                          ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_soil_5cm"                 ,CSVC_soil_C_all_5cm                              ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_soil_10cm"                ,CSVC_soil_C_all_10cm                             ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_soil_15cm"                ,CSVC_soil_C_all_15cm                             ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_soil_30cm"                ,CSVC_soil_C_all_30cm                             ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_soil_60cm"                ,CSVC_soil_C_all_60cm                             ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_soil_90cm"                ,CSVC_soil_C_all_90cm                             ,UC_kg_m2,UT_arbitrary_date);
#ifdef PHOSPHORUS
   add_field2(annual_section,"P_uptake"                   ,CSVC_crop_P_mass_uptake_time_step_sum            ,UC_kg_m2,UT_arbitrary_date);
#endif

   add_field2(annual_section,"C_SOM_profile"              ,CSVC_soil_C_SOM_profile                          ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_SOM_5cm"                  ,CSVC_soil_C_SOM_5cm                              ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_SOM_10cm"                 ,CSVC_soil_C_SOM_10cm                             ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_SOM_15cm"                 ,CSVC_soil_C_SOM_15cm                             ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_SOM_30cm"                 ,CSVC_soil_C_SOM_30cm                             ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_SOM_60cm"                 ,CSVC_soil_C_SOM_60cm                             ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_SOM_90cm"                 ,CSVC_soil_C_SOM_90cm                             ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_microbial_profile"        ,CSVC_soil_C_microbial_profile                    ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_microbial_5cm"            ,CSVC_soil_C_microbial_5cm                        ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_microbial_10cm"           ,CSVC_soil_C_microbial_10cm                       ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_microbial_15cm"           ,CSVC_soil_C_microbial_15cm                       ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_microbial_30cm"           ,CSVC_soil_C_microbial_30cm                       ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_microbial_60cm"           ,CSVC_soil_C_microbial_60cm                       ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_microbial_90cm"           ,CSVC_soil_C_microbial_90cm                       ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_labile_profile"           ,CSVC_soil_C_labile_profile                       ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_labile_5cm"               ,CSVC_soil_C_labile_5cm                           ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_labile_10cm"              ,CSVC_soil_C_labile_10cm                          ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_labile_15cm"              ,CSVC_soil_C_labile_15cm                          ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_labile_30cm"              ,CSVC_soil_C_labile_30cm                          ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_labile_60cm"              ,CSVC_soil_C_labile_60cm                          ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_labile_90cm"              ,CSVC_soil_C_labile_90cm                          ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_metastable_profile"       ,CSVC_soil_C_metastable_profile                   ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_metastable_5cm"           ,CSVC_soil_C_metastable_5cm                       ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_metastable_10cm"          ,CSVC_soil_C_metastable_10cm                      ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_metastable_15cm"          ,CSVC_soil_C_metastable_15cm                      ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_metastable_30cm"          ,CSVC_soil_C_metastable_30cm                      ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_metastable_60cm"          ,CSVC_soil_C_metastable_60cm                      ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_metastable_90cm"          ,CSVC_soil_C_metastable_90cm                      ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_passive_profile"          ,CSVC_soil_C_passive_profile                      ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_passive_5cm"              ,CSVC_soil_C_passive_5cm                          ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_passive_10cm"             ,CSVC_soil_C_passive_10cm                         ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_passive_15cm"             ,CSVC_soil_C_passive_15cm                         ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_passive_30cm"             ,CSVC_soil_C_passive_30cm                         ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_passive_60cm"             ,CSVC_soil_C_passive_60cm                         ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_passive_90cm"             ,CSVC_soil_C_passive_90cm                         ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"CO2_C_loss_residue"         ,CSVC_organic_matter_CO2_C_loss_residue_time_step_sum,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"CO2_C_loss_SOM"             ,CSVC_organic_matter_CO2_C_loss_SOM_time_step_sum   ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"CO2_C_loss_OM"              ,CSVC_organic_matter_CO2_C_loss_OM_time_step_sum    ,UC_kg_m2,UT_arbitrary_date);

   add_field2(annual_section,"C_residues_surface"         ,CSVC_soil_C_residues_surface                     ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_residues_profile"         ,CSVC_soil_C_residues_profile                     ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_residues_5cm"             ,CSVC_soil_C_residues_5cm                         ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_residues_10cm"            ,CSVC_soil_C_residues_10cm                        ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_residues_15cm"            ,CSVC_soil_C_residues_15cm                        ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_residues_30cm"            ,CSVC_soil_C_residues_30cm                      ,UC_kg_m2,UT_arbitrary_date); //131023
   add_field2(annual_section,"C_residues_60cm"            ,CSVC_soil_C_residues_60cm                      ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_residues_90cm"            ,CSVC_soil_C_residues_90cm                        ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_residues_surface_minimum" ,CSVC_soil_C_residues_surface_time_step_min             ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_residues_profile_minimum" ,CSVC_soil_C_residues_surface_time_step_min             ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_residues_5cm_minimum"  ,CSVC_soil_C_residues_5cm_time_step_min             ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_residues_10cm_minimum" ,CSVC_soil_C_residues_10cm_time_step_min             ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_residues_15cm_minimum" ,CSVC_soil_C_residues_15cm_time_step_min             ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_residues_30cm_minimum" ,CSVC_soil_C_residues_30cm_time_step_min             ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_residues_60cm_minimum" ,CSVC_soil_C_residues_60cm_time_step_min             ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_residues_90cm_minimum" ,CSVC_soil_C_residues_90cm_time_step_min             ,UC_kg_m2,UT_arbitrary_date);

   add_field2(annual_section,"C_decomposed_SOM_profile" ,CSVC_soil_C_decomposed_SOM_profile_time_step_sum ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_decomposed_SOM_5cm"     ,CSVC_soil_C_decomposed_SOM_5cm_time_step_sum ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_decomposed_SOM_10cm"    ,CSVC_soil_C_decomposed_SOM_10cm_time_step_sum ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_decomposed_SOM_15cm"    ,CSVC_soil_C_decomposed_SOM_15cm_time_step_sum ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_decomposed_SOM_30cm"    ,CSVC_soil_C_decomposed_SOM_30cm_time_step_sum ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_decomposed_SOM_60cm"    ,CSVC_soil_C_decomposed_SOM_60cm_time_step_sum ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_decomposed_SOM_90cm"    ,CSVC_soil_C_decomposed_SOM_90cm_time_step_sum ,UC_kg_m2,UT_arbitrary_date);

   add_field2(annual_section,"C_decomposed_residue_profile" ,CSVC_soil_C_decomposed_residue_profile_time_step_sum ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_decomposed_residue_5cm"     ,CSVC_soil_C_decomposed_residue_5cm_time_step_sum ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_decomposed_residue_10cm"    ,CSVC_soil_C_decomposed_residue_10cm_time_step_sum ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_decomposed_residue_15cm"    ,CSVC_soil_C_decomposed_residue_15cm_time_step_sum ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_decomposed_residue_30cm"    ,CSVC_soil_C_decomposed_residue_30cm_time_step_sum ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_decomposed_residue_60cm"    ,CSVC_soil_C_decomposed_residue_60cm_time_step_sum ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_decomposed_residue_90cm"    ,CSVC_soil_C_decomposed_residue_90cm_time_step_sum ,UC_kg_m2,UT_arbitrary_date);

   add_field2(annual_section,"C_decomposed_residue_flat"          ,CSVC_soil_C_decomposed_residue_flat_time_step_sum       ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_decomposed_residue_stubble"       ,CSVC_soil_C_decomposed_residue_stubble_time_step_sum    ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_decomposed_residue_attached"      ,CSVC_soil_C_decomposed_residue_attached_time_step_sum   ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_incorporated_by_tillage"          ,CSVC_soil_C_incorporated_by_tillage_time_step_sum       ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"C_removed_by_harvest"               ,CSVC_soil_C_removed_by_harvest_time_step_sum            ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"plant_C_mass_canopy"       ,CSVC_crop_C_mass_canopy_time_step_sum                   ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"plant_C_mass_root"         ,CSVC_crop_C_mass_roots_live_time_step_sum               ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"N_denitrification"           ,CSVC_soil_N_denitrification_time_step_sum               ,UC_kg_m2,UT_arbitrary_date);

   add_field2(annual_section,"N_N2O_loss_denitrification"  ,CSVC_soil_N_N2O_loss_denitrification_time_step_sum               ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"N_N2O_loss_nitrification"    ,CSVC_soil_N_N2O_loss_nitrification_time_step_sum               ,UC_kg_m2,UT_arbitrary_date);

   add_field2(annual_section,"N_soil_profile"            ,CSVC_soil_N_N_amount                                    ,UC_kg_m2,UT_arbitrary_date);
   #ifdef NYI
   add_field2(annual_section,"N_soil_inputs"             ,CSVC_soil_N_input_period_sum                            ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"N_soil_output"             ,CSVC_soil_N_output_period_sum                           ,UC_kg_m2,UT_arbitrary_date);
   #endif
   add_field2(annual_section,"N_OM_mineralization_profile",CSVC_organic_matter_N_mineralization_profile_time_step_sum  ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"N_OM_mineralization_5cm"   ,CSVC_organic_matter_N_mineralization_5cm_time_step_sum  ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"N_OM_mineralization_10cm"  ,CSVC_organic_matter_N_mineralization_10cm_time_step_sum ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"N_OM_mineralization_15cm"  ,CSVC_organic_matter_N_mineralization_15cm_time_step_sum ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"N_OM_mineralization_30cm"  ,CSVC_organic_matter_N_mineralization_30cm_time_step_sum ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"N_OM_mineralization_60cm"  ,CSVC_organic_matter_N_mineralization_60cm_time_step_sum ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"N_OM_mineralization_90cm"  ,CSVC_organic_matter_N_mineralization_90cm_time_step_sum ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"N_OM_immobilization_profile",CSVC_soil_N_immobilization_profile_time_step_sum            ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"N_OM_immobilization_5cm"   ,CSVC_soil_N_immobilization_5cm_time_step_sum            ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"N_OM_immobilization_10cm"  ,CSVC_soil_N_immobilization_10cm_time_step_sum           ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"N_OM_immobilization_15cm"  ,CSVC_soil_N_immobilization_15cm_time_step_sum           ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"N_OM_immobilization_30cm"  ,CSVC_soil_N_immobilization_30cm_time_step_sum           ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"N_OM_immobilization_60cm"  ,CSVC_soil_N_immobilization_60cm_time_step_sum           ,UC_kg_m2,UT_arbitrary_date);
   add_field2(annual_section,"N_OM_immobilization_90cm"  ,CSVC_soil_N_immobilization_90cm_time_step_sum           ,UC_kg_m2,UT_arbitrary_date);
/*NYI
Luca needs:

NH3 volatilization
denitrification
total N inputs to the soil     (check that N applied include organic N)
total N outputs from the soil
Mineral N in the soil (mineral profile N)
*/
#endif
}
//_2004-09-21___________________________________________________________________
void Annual_data_source::record(Datetime64 date_time)
{  // The date is usually December 31, but may be earlier if the simulation period ends on some other date.
   set_date(date_time);
   set((*this));
}
//______________________________________________________________________________
Annual_data_record::Annual_data_record()
   : CORN::Data_record(annual_section)
, a_out_ID                         (0)
, alloc_ID                         (0)
, year_LADSS                       (0)
, residue_ground_cover             (0)
, soil_loss                        (0)
, RUSLE_C_factor                   (0)
#ifndef CS_INSPECTOR_VERSION
, ET_pot                           (0)
, ET_act                           (0)
, ET_ref                           (0)                                           //130723
, transp_pot                       (0)
, transp_act                       (0)
, evap_soil_pot                    (0)
, evap_soil_act                    (0)
, evap_residue_pot                 (0)
, evap_residue_act                 (0)
, irrigation                       (0)
, precipitation                    (0)
, crop_water_intrcpt               (0)
, residue_water_intrcpt            (0)
, surface_water_runoff             (0)
, ponded_water                     (0)
, water_enter_soil                 (0)
, soil_water_drainage              (0)
#endif
, soil_water_balance               (0)
, biomass_grazed                   (0)
#ifdef NITROGEN
#ifndef CS_INSPECTOR_VERSION
, N_total_applied                  (0)
, N_uptake                         (0)
, N_auto_uptake                    (0)
, N_mineralized_residue            (0)
, N_mineralized_org_fert           (0)
, N_mineralized_OM                 (0)
, N_immobilization                 (0)
, N_mineralization                 (0)
, N_inorganic_applied              (0)                                           //160323
, N_organic_applied                (0)
, N_organic_gaseous_loss           (0)
, N_inorganic_gaseous_loss         (0)
, N_fixation                       (0)
#ifdef PHOSPHORUS
, P_uptake                         (0)                                           //110801
#endif
, N_leached                        (0)
#endif
, C_soil_surface                   (0)
, C_residues_surface               (0)
, C_residues_surface_minimum       (0)
, C_residues_profile_minimum       (0)
#ifndef CS_INSPECTOR_VERSION
, CO2_C_loss_OM                    (0)
, CO2_C_loss_SOM                   (0)
, CO2_C_loss_residue               (0)
#endif
, C_decomposed_residue_flat         (0)
, C_decomposed_residue_stubble      (0)
, C_decomposed_residue_attached     (0)
, C_incorporated_by_tillage         (0)
, C_removed_by_harvest              (0)
, plant_C_mass_canopy               (0)
, plant_C_mass_root                 (0)
, denitrification_X                   (0)
, N_soil_profile                    (0)
#ifdef NYI
, N_soil_inputs                     (0)
, N_soil_output                     (0)
#endif
#ifndef CS_INSPECTOR_VERSION
, N_N2O_loss_denitrification          (0)                                        //111207
, N_N2O_loss_nitrification            (0)                                        //111207
#endif
#endif
{
   for (nat8 i = 0; i < key_profile_sum_depths_COUNT; i++)                       //160629
   {
      C_soil               [i] = 0;
      C_SOM                [i] = 0;
      C_microbial          [i] = 0;
      C_labile             [i] = 0;
      C_metastable         [i] = 0;
      C_passive            [i] = 0;
      C_residues           [i] = 0;
      C_residues_minimum   [i] = 0;
      N_OM_mineralization  [i] = 0;
      N_OM_immobilization  [i] = 0;
      C_decomposed_SOM     [i] = 0;
      C_decomposed_residue [i] = 0;
   }
}
//______________________________________________________________________________
} // namespace CropSyst

