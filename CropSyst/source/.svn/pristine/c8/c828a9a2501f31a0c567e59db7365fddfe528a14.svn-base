#ifndef OM_pools_singleH
#define OM_pools_singleH
#include "organic_matter/OM_pools_common.h"
//_forward declarations_________________________________________________________
class Organic_matter_initialization_parameters;
class Organic_matter_decomposition_parameters;
class Organic_biomatter_single_pool;
//______________________________________________________forward declarations___/
class Organic_matter_pools_single
: public Organic_matter_pools_common
{
public:
   Organic_biomatter_single_pool           *SOM_ref[MAX_soil_layers];   // This is so lignified residue has access for contribute_to //060524
public: // structors
   Organic_matter_pools_single
      (const Organic_matter_decomposition_parameters &_organic_matter_decomposition_parameters //120912
      ,Soil_abiotic_environment_profile       &_soil_abiotic_environment_profile //060726
      ,const Soil_layers_interface            &_soil_layers                      //060726
      ,unmodifiable_ Soil_structure_interface &_soil_structure                   //070725
      ,Soil_nitrogen_interface                *_soil_N
      ,const Soil_texture_interface           &_soil_texture);                   //070707
private:
   virtual Organic_biomatter_common *provide_organic_matter_pool                 //070707
      (Organic_matter_type type,nat8  layer);
      // Always returns a valid pointer
   virtual Organic_biomatter_common  *render_OM_pool                             //111001
      (Organic_matter_type     _type
      ,Organic_matter_position _position
      ,nat8                    _layer
      ,Organic_matter_cycling  _cycling
      ,RUSLE2_Residue_type     _RUSLE2_residue_type                              //060731
      ,float64                 _biomass
      ,float64                 _carbon_fraction
      ,float64                 _carbon_nitrogen_ratio
      ,float64                 _decomposition_constant                           //090703
      ,float64                 _detrition_constant                             //090413
      ,float64                 _area_per_mass      // = 0.0  stubble and surface residue_only?
      ,float64                 &_contact_fraction
      ,const Soil_texture_interface &_soil_texture                               //070707
      , Soil_abiotic_environment_layer * _soil_abiotic_environment_layer) rendition_;
   virtual modifiable_ Organic_biomatter_common_pool  *get_metastable_SOM_ref(nat8 layer);    //110929
   virtual modifiable_ Organic_biomatter_common_pool  *get_microbial_biomass_ref(nat8 layer); //110929
      // In the case of single SOM pool there is just the one contribution pool
public:
   virtual bool initialize_layer
      (nat8  horizon,nat8  layer
      ,float64 sand_fraction                                                     //060418
      ,float64 initial_organic_matter_carbon_mass
      ,float64 microbial_decomposition_const
      ,const Organic_matter_initialization_parameters &organic_matter_historical_parameters  //060215
      ,Soil_abiotic_environment_layer *point_soil_abiotic_environment_layer);
      // this was added so we can store historical equilibriated OM for futher future scenario runs 120912
   inline virtual nat32 write(std::ostream &)                       performs_IO_ //150728
      { return 0; }                                                              //120912
   inline virtual bool read(std::istream &stream)
      { return false; }                                                           //120912
};
//_2011-09-29_____________________________________________________________________________
#endif

