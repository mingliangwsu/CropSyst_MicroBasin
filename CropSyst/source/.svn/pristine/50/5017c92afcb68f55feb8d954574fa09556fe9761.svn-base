#ifndef cs_ETH
#define cs_ETH
#     include "options.h"

// This options.h needs to be for the current program being compiled
// is should not necessarily be /cropsyst/cpp/options.h
#if (CROPSYST_VERSION == 3)
#  define CO2
#  include "options.h"
#  include "common/weather/ET_reference.h"
#  include "UED_out.h"
   class Recorder_data_record;
#endif
#  include "common/biometeorology/ET_reference_FAO.h"
/* NYI
#if (CROPSYST_VERSION == 5)
#  include "common/biometeorology/ET_reference_best.h"
#endif
*/
#include "common/weather/loc_param.h"
#include "weather/parameter/WP_vapor_pressure_deficit.h"
// (For ET model types)
namespace CropSyst
{  class Desired_variables;
}
//______________________________________________________________________________
class CropSyst_ET
: public ET_Reference_FAO                                                        //011018
{
   const Weather_provider &weather_provider;                                     //150804
   float64                  screening_height; //m                                //151022
   const Wind_speed        &wind_speed;                                          //151022
   const Vapor_pressure_deficit_fullday &vapor_pressure_deficit_fullday_avg;     //151022
 public :
   float64 PT_const_param;                                                       //051231
   float64 pot_ref_evapotransp_m;   // m/day                                     //010910
/*160601 moved Currently in land_unit_sim but should be property of crop to
   float64 output_pot_crop_evapotransp_m;  // m/day  // was pot_evapotransp             //010910
   float64 act_crop_evapotransp_m;            // was act_crop_evapotransp        //010910
*/

   float64 daily_ratio_elevated_to_baseline_ppm_CO2_ET;                          //090316
      // Used when atmospheric CO2 concentration change
   ET_Model ET_model_selected;                                                   //040607
      // The ET model selected today with the best quality
 public: // output control                                                       //030801
   bool structure_defined;                                                       //030801
 public: // constructor
   CropSyst_ET
      (
       const Weather_provider &_weather_provider                                 //150804
      ,const Geocoordinate &geocoordinate                                        //151118
      ,float64 screening_height                                                  //151022
      ,const float64       &day_length_hours_today                               //150627
      //NYN,Aerodynamics &_aerodynamics                                          //150601
      ,ET_Model            preferred_ET_model                                    //011109
      ,float64             PT_const_param);                                      //051231
 public: // Daily transition;
   virtual void update();
 public: // Dependent functions
   float64 other_atmospheric_transmissivity(float64 pot_solar_rad);
   float64 aero_dynamic_resistance_vapor_exchange
      (float64 plant_height_m);    // day/m
 public: // ET calculation
   float64 calc_Priestley_Taylor_pot_ref_et_mm
      (float64 slope_of_sat_vap_press                                            //051231
      ,float64 psychrometric  // Units: kPa/C                                    //980311
      ,float64 latent_heat                                                       //980310
      ,float64 net_rad          // day time                                      //980310
      ,float64 soil_heat_flux  //{ MJ/m2/day }                                   //980310
      ,float64 fullday_VPD);                                                     //020212
   // This returns the daytime potET!!
   float64 calc_pot_ref_evapotranspiration_mm();
   // This returns the daytime potET!!
 public: // Accessors
   inline float32 get_pot_reference_evapotranspiration_m()                 const //010910
      { return pot_ref_evapotransp_m;}
#ifdef CO2_CHANGE
   inline float64 get_daily_ratio_elevated_to_baseline_ppm_CO2_ET()        const
      { return daily_ratio_elevated_to_baseline_ppm_CO2_ET; };
#endif
 public: // Recording object overrides
   inline virtual const char *get_record_section_label()                          const { return "et"; }
   void setup_structure(CORN::Data_record &data_rec,bool for_write,const CropSyst::Desired_variables &desired_vars);  //030801
   inline const char *get_selected_ET_model_label()                               const { return CS_ET_model_label_table[ET_model_selected].label;}   //090802
};
//______________________________________________________________________________
#endif
//cs_ET.h

